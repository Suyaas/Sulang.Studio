<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cl="clr-namespace:Sulang.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <!--加载所有的颜色设定-->
        <ResourceDictionary Source="pack://application:,,,/Sulang.Wpf.Themes;component/DarkColors.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    <!--IconButton-->
    <Style TargetType="{x:Type cl:IconButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cl:IconButton}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="imgIcon" Source="{TemplateBinding Image}"/>
                            <TextBlock x:Name="tbText" 
                                       Text="{TemplateBinding Text}" Foreground="{StaticResource highlightBroderBrush}"
                                       Margin="3,0,0,0" Visibility="Hidden" VerticalAlignment="Center">
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushHover}" />
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHover}" />
                            <Setter TargetName="imgIcon" Property="Source" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageHover}" />
                            <Setter TargetName="tbText" Property="Foreground" Value="{StaticResource lightTextBrush}"></Setter>
                        </Trigger>
                        <Trigger Property="HaveText" Value="True">
                            <Setter TargetName="tbText" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>